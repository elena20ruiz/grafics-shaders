VERTEX SHADER:
-------------------------------------------------

 - INPUT: 
		vec3 vertex -> OBJECT SPACE
		ve2 texCoord -> COORDENADES DE TEX
		
 - OUTPUT: 
        vec4 gl_Position -> NORMALMENT CLIP SPACE
        
        
FRAGMENT SHADER:
-------------------------------------------------

  - INPUT:
        vec4 gl_FragCoord -> WINDOWS SPACE
  
  - OUTPUT:
       float gl_FragDepth (z en WINDOWS SPACE)
       
UNIFORM:
--------------------------------------------------

uniform mat4 modelMatrix; 					//Pasar a World Space desde OS
uniform mat4 viewMatrix;   					//Pasar a Eye Space desde WS
uniform mat4 projectionMatrix;       		//Pasar a Clip Space desde ES
uniform mat4 modelViewMatrix; 				//Pasar a Eye Space desde OS
uniform mat4 modelViewProjectionMatrix;     //Pasar a Clip Space desde OS

uniform mat4 modelMatrixInverse;
uniform mat4 viewMatrixInverse;
uniform mat4 projectionMatrixInverse;
uniform mat4 modelViewMatrixInverse;
uniform mat4 modelViewProjectionMatrixInverse;

uniform mat3 normalMatrix;

uniform vec4 lightPosition; //Posici√≥ de la llum (EYE SPACE)

uniform vec4 matAmbient; //Ka
uniform vec4 matDiffuse; //Kd
uniform vec4 matSpecular; //Ks
uniform float matShininess; //S

uniform vec4 lightAmbient; //Ia
uniform vec4 lightDiffuse; //Id
uniform vec4 lightSpecular; //Is


uniform vec3 boundingBoxMin;	 // cantonada de la capsa englobant
uniform vec3 boundingBoxMax;	 // cantonada de la capsa englobant

uniform vec2 mousePosition;  	 // coordenades del cursor (window space)
								 // origen a la cantonada inferior esquerra

